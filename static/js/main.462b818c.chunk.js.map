{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","className","map","good","style","color","name","id","getAll","fetch","then","response","json","get5First","sort","a","b","localeCompare","slice","getRedGoods","filter","App","useState","visibleGoods","setVisibleGoods","hasLoadingError","setLoadingError","loadGoods","loadType","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"0PAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,oBAAIC,UAAU,mEAAd,SAIGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBACEF,UAAU,qEAMV,UAAQ,OACRG,MAAO,CAAEC,MAAOF,EAAKE,OARvB,SAUGF,EAAKG,MAJDH,EAAKI,UCfX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAY,WACvB,OAAOL,IACJE,MAAK,SAAAV,GAAK,OAAIA,EAAMc,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAET,KAAKW,cAAcD,EAAEV,SACxDY,MAAM,EAAG,OAGHC,EAAc,WACzB,OAAOX,IACJE,MAAK,SAAAV,GAAK,OAAIA,EAAMoB,QAAO,SAAAjB,GAAI,MAAmB,QAAfA,EAAKE,aCVhCgB,EAAgB,WAC3B,MAAwCC,mBAAiB,IAAzD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA2CF,oBAAS,GAApD,mBAAOG,EAAP,KAAwBC,EAAxB,KAEMC,EAAS,uCAAG,WAAOC,GAAP,eAAAb,EAAA,6DAChBW,GAAgB,GADA,kBAGME,IAHN,OAGR5B,EAHQ,OAKdwB,EAAgBxB,GALF,gDAOd0B,GAAgB,GAPF,yDAAH,sDAWf,OACE,sBAAKzB,UAAU,2BAAf,UACE,oBAAIA,UAAU,cAAd,mCAIA,sBAAKA,UAAU,iDAAf,UACE,wBACE4B,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMH,EAAUnB,IAH3B,4BAQA,wBACEqB,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMH,EAAUd,IAH3B,gCAQA,wBACEgB,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMH,EAAUR,IAH3B,gCASAM,GAAmB,cAAC,EAAD,CAAWzB,MAAOuB,QCpD7CQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.462b818c.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\nimport 'bootstrap/scss/bootstrap.scss';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul className=\"\n    list-group\n    list-group-flush justify-content-center align-center\"\n  >\n    {goods.map(good => (\n      <li\n        className=\"\n          list-group-item\n          text-center\n          list-group-item-action\n          text-uppercase\"\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods.sort((a, b) => a.name.localeCompare(b.name))\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'));\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport 'bootstrap/scss/bootstrap.scss';\nimport { GoodsList } from './GoodsList';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [visibleGoods, setVisibleGoods] = useState<Good[]>([]);\n  const [hasLoadingError, setLoadingError] = useState(false);\n\n  const loadGoods = async (loadType: () => Promise<Good[]>) => {\n    setLoadingError(false);\n    try {\n      const goods = await loadType();\n\n      setVisibleGoods(goods);\n    } catch {\n      setLoadingError(true);\n    }\n  };\n\n  return (\n    <div className=\"App container-sm mx-auto\">\n      <h1 className=\"text-center\">\n        Dynamic list of Goods\n      </h1>\n\n      <div className=\"d-flex p-2 bd-highlight justify-content-center\">\n        <button\n          type=\"button\"\n          data-cy=\"all-button\"\n          onClick={() => loadGoods(getAll)}\n        >\n          Load all goods\n        </button>\n\n        <button\n          type=\"button\"\n          data-cy=\"first-five-button\"\n          onClick={() => loadGoods(get5First)}\n        >\n          Load 5 first goods\n        </button>\n\n        <button\n          type=\"button\"\n          data-cy=\"red-button\"\n          onClick={() => loadGoods(getRedGoods)}\n        >\n          Load red goods\n        </button>\n      </div>\n\n      {!hasLoadingError && <GoodsList goods={visibleGoods} />}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}